Reading

Functional Programming Concepts

Reading

Functional Programming Concepts

What is functional programming?Functional programming is a programming paradigm that treats computation as the evaluation of mathematical functions and avoids changing state and mutable data. In functional programming, functions are first-class citizens, meaning they can be passed as arguments, returned from other functions, and assigned to variables.
What is a pure function and how do we know if something is a pure function?A pure function is a function that always produces the same output for the same input and has no side effects on the program's state or the outside world. It means that the function's return value depends solely on its input parameters and doesn't modify any external state. To determine if a function is pure, you need to check whether it adheres to these principles.

What are the benefits of a pure function?

Pure functions have several advantages, including:

They are easier to reason about since they don't have side effects.
They make it easier to achieve code predictability and reliability.
They can be easily tested and reasoned about independently of the context.


What is immutability?Immutability refers to the property of data that cannot be modified after it is created. In functional programming, data is typically immutable, meaning it cannot be changed once it's initialized. Instead of modifying data, functional programs create new data with the desired changes.

What is Referential transparency?Referential transparency means that a function call can be replaced with its resulting value without changing the program's behavior. In other words, given the same inputs, a function will always produce the same output, and you can substitute the function call with its result in the code without altering the program's semantics.
Videos

Node JS Tutorial for Beginners #6 - Modules and require()

What is a module? A module is a self-contained unit of code that encapsulates functionality and can be reused across different parts of a program. In Node.js, modules are files that contain JavaScript code and can expose functions, objects, or other values that can be used in other parts of the program.

What does the word ‘require’ do? In Node.js, the require function is used to load a module from another file into the current file. It allows you to access the functions and data exported by the other module and use them in your current script.

How do we bring another module into the file that we are working in? To bring another module into the file you are working in, you use the require function with the path to the module file as an argument. For example:

What do we have to do to make a module available? To make a module available for other parts of the program, you need to export the functions, objects, or values you want to make accessible. In Node.js, you can use the module.exports object to specify what should be available for other modules to import.
